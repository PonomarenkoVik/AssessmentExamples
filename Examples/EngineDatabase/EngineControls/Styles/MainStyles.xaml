<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:behaviors="clr-namespace:EngineUIComponents.Behaviours">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />

    <Style x:Key="DetailTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Background" Value="{StaticResource PanelBackgroundColor}"/>
        <Setter Property="Foreground" Value="{StaticResource PanelForegroundColor}"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="10, 5" />
    </Style>
    <Style x:Key="DetailTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource BaseDetailControlStyle}">
        <Setter Property="MinWidth" Value="200"/>
        <Setter Property="Margin" Value="10, 5"/>
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style x:Key="DetailComboBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource BaseComboboxStyle}">
        <Setter Property="MinWidth" Value="200"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Margin" Value="10, 5"/>
    </Style>

    <Style x:Key="ButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseControlStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#35485F"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#1a2a40"/>
                <Setter Property="FontWeight" Value="UltraLight"/>
                <Setter Property="Foreground" Value="#5a6a80"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonAnimatedStyle" TargetType="Button" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <Border.Triggers>
                            <EventTrigger RoutedEvent="PreviewMouseDown">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Margin)">
                                            <EasingThicknessKeyFrame KeyTime="00:00:00.1000000" Value="3"/>
                                            <EasingThicknessKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Border.Triggers>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainActionButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonAnimatedStyle}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="150"/>
    </Style>

    <Style TargetType="DataGridCell">
        <Setter Property="Padding" Value="4 0"/>
        <Setter Property="Background" Value="#5A6575"/>
        <Setter Property="Foreground" Value="#99D2F1"/>
        <Setter Property="BorderBrush" Value="#5A6575"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="BorderBrush" 
                                Value="#99D2F1" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Width" Value="0"/>
    </Style>

    <Style TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="#F9D2F1"/>
    </Style>

    <Style x:Key="DataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
        <Setter Property="Background" Value="#0A8595"/>
        <Setter Property="Foreground" Value="#99D2F1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
</ResourceDictionary>